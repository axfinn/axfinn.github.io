<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>开发工具 on jaxiu He</title>
    <link>https://axfinn.github.io/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/</link>
    <description>Recent content in 开发工具 on jaxiu He</description>
    <generator>Hugo</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Wed, 23 Jul 2025 16:00:00 +0800</lastBuildDate>
    <atom:link href="https://axfinn.github.io/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Qwen Code CLI 使用详解</title>
      <link>https://axfinn.github.io/blog/2025-07/qwen-code-cli-usage/</link>
      <pubDate>Wed, 23 Jul 2025 16:00:00 +0800</pubDate>
      <guid>https://axfinn.github.io/blog/2025-07/qwen-code-cli-usage/</guid>
      <description>&lt;h1 id=&#34;qwen-code-cli-使用详解&#34;&gt;Qwen Code CLI 使用详解&lt;/h1&gt;&#xA;&lt;h2 id=&#34;cli-入门&#34;&gt;CLI 入门&lt;/h2&gt;&#xA;&lt;p&gt;Qwen Code 是一个功能强大的命令行 AI 工作流工具，为开发者提供了一种全新的与代码交互的方式。通过 CLI，用户可以与 AI 进行对话，执行各种编程任务。&lt;/p&gt;&#xA;&lt;h3 id=&#34;安装&#34;&gt;安装&lt;/h3&gt;&#xA;&lt;p&gt;确保您已经安装了 Node.js 20+ 版本，然后通过 npm 安装 Qwen Code：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm install -g @qwen-code/qwen-code&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;基本使用&#34;&gt;基本使用&lt;/h3&gt;&#xA;&lt;p&gt;安装完成后，您可以通过以下命令启动 Qwen Code：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;qwen-code&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这将启动交互式 CLI 会话，您可以直接与 AI 进行对话。&lt;/p&gt;&#xA;&lt;h3 id=&#34;非交互式使用&#34;&gt;非交互式使用&lt;/h3&gt;&#xA;&lt;p&gt;您也可以通过管道或重定向将输入传递给 Qwen Code：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;帮我生成一个 React 组件&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; qwen-code&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;cli-入口实现&#34;&gt;CLI 入口实现&lt;/h2&gt;&#xA;&lt;p&gt;Qwen Code 的 CLI 入口是一个基于 React 和 Ink 构建的命令行应用程序。主要特性包括：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Qwen Code 工具详解</title>
      <link>https://axfinn.github.io/blog/2025-07/qwen-code-tools-detailed/</link>
      <pubDate>Wed, 23 Jul 2025 15:30:00 +0800</pubDate>
      <guid>https://axfinn.github.io/blog/2025-07/qwen-code-tools-detailed/</guid>
      <description>&lt;h1 id=&#34;qwen-code-工具详解&#34;&gt;Qwen Code 工具详解&lt;/h1&gt;&#xA;&lt;h2 id=&#34;工具概览&#34;&gt;工具概览&lt;/h2&gt;&#xA;&lt;p&gt;Qwen Code 提供了一套丰富的工具集，允许 AI 模型与本地环境进行交互、执行命令、访问文件和执行各种操作。这些工具通过确认提示和沙箱机制确保安全性。&lt;/p&gt;&#xA;&lt;p&gt;工具集的分类可以用下图表示：&lt;/p&gt;&#xA;&lt;div class=&#34;mermaid&#34;&gt;&#xA;&#xA;graph TD&#xA;    A[Qwen Code 工具集] --&gt; B[文件系统工具]&#xA;    A --&gt; C[网络工具]&#xA;    A --&gt; D[其他工具]&#xA;    &#xA;    B --&gt; B1[list_directory]&#xA;    B --&gt; B2[read_file]&#xA;    B --&gt; B3[write_file]&#xA;    B --&gt; B4[glob]&#xA;    B --&gt; B5[search_file_content]&#xA;    B --&gt; B6[replace]&#xA;    &#xA;    C --&gt; C1[google_web_search]&#xA;    C --&gt; C2[web_fetch]&#xA;    &#xA;    D --&gt; D1[save_memory]&#xA;    D --&gt; D2[run_shell_command]&#xA;    D --&gt; D3[MCP 服务器工具]&#xA;&#xA;&lt;/div&gt;&#xA;&lt;h2 id=&#34;文件系统工具&#34;&gt;文件系统工具&lt;/h2&gt;&#xA;&lt;p&gt;Qwen Code 提供了完整的文件系统操作工具：&lt;/p&gt;&#xA;&lt;h3 id=&#34;list_directory列出目录内容&#34;&gt;&lt;code&gt;list_directory&lt;/code&gt;：列出目录内容&lt;/h3&gt;&#xA;&lt;p&gt;参数：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;path&lt;/code&gt; (string, required): 要列出的目录的绝对路径&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ignore&lt;/code&gt; (array, optional): 要忽略的 glob 模式列表&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;respect_git_ignore&lt;/code&gt; (boolean, optional): 是否遵循 .gitignore 模式，默认为 true&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;功能：显示指定目录下的文件和子目录&lt;/p&gt;</description>
    </item>
    <item>
      <title>Qwen Code 项目概览</title>
      <link>https://axfinn.github.io/blog/2025-07/qwen-code-project-overview/</link>
      <pubDate>Wed, 23 Jul 2025 15:00:00 +0800</pubDate>
      <guid>https://axfinn.github.io/blog/2025-07/qwen-code-project-overview/</guid>
      <description>&lt;h1 id=&#34;qwen-code-项目概览&#34;&gt;Qwen Code 项目概览&lt;/h1&gt;&#xA;&lt;h2 id=&#34;什么是-qwen-code&#34;&gt;什么是 Qwen Code？&lt;/h2&gt;&#xA;&lt;p&gt;Qwen Code 是一个基于 Gemini CLI 改造的命令行 AI 工作流工具，专为 Qwen3-Coder 模型优化，具有增强的解析器和工具支持。该项目的主要目标是为开发者提供一个强大的命令行界面，让他们能够利用 AI 的能力来完成各种编程任务。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;┌─────────────────────────────────────┐&#xA;│           Qwen Code 架构            │&#xA;├─────────────────────────────────────┤&#xA;│  ┌─────────────┐  ┌──────────────┐ │&#xA;│  │   CLI 界面   │  │  核心引擎     │ │&#xA;│  └─────────────┘  └──────────────┘ │&#xA;│        │               │           │&#xA;│        ▼               ▼           │&#xA;│  ┌─────────────┐  ┌──────────────┐ │&#xA;│  │  用户输入    │  │  AI 模型接口  │ │&#xA;│  └─────────────┘  └──────────────┘ │&#xA;│        │               │           │&#xA;│        ▼               ▼           │&#xA;│  ┌───────────────────────────────┐ │&#xA;│  │        工具执行层              │ │&#xA;│  │  - 文件系统操作                │ │&#xA;│  │  - 网络请求                   │ │&#xA;│  │  - 命令执行                   │ │&#xA;│  │  - 内存管理                   │ │&#xA;│  └───────────────────────────────┘ │&#xA;└─────────────────────────────────────┘&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;核心特性&#34;&gt;核心特性&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;超越上下文限制的代码理解和编辑&lt;/strong&gt;：Qwen Code 可以处理大型代码库，不受传统模型上下文长度的限制。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;工作流自动化&lt;/strong&gt;：支持复杂的开发任务自动化，提高开发效率。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;增强的解析器&lt;/strong&gt;：改进了对代码结构的理解能力，能够更准确地解析和处理代码。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;丰富的工具集&lt;/strong&gt;：提供多种工具，包括文件系统访问、网络搜索、多文件处理等。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;安装要求&#34;&gt;安装要求&lt;/h3&gt;&#xA;&lt;p&gt;Qwen Code 需要 Node.js 20+ 版本。可以通过 npm 或从源代码安装：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git 学习与详细使用指南</title>
      <link>https://axfinn.github.io/blog/2025-07/git-learning-and-usage-guide/</link>
      <pubDate>Sat, 19 Jul 2025 11:00:00 +0800</pubDate>
      <guid>https://axfinn.github.io/blog/2025-07/git-learning-and-usage-guide/</guid>
      <description>&lt;h1 id=&#34;git-学习与详细使用指南&#34;&gt;Git 学习与详细使用指南&lt;/h1&gt;&#xA;&lt;p&gt;Git 是目前世界上最流行、最先进的分布式版本控制系统。它能够高效地管理项目代码，记录每一次修改，并允许多人协作开发。无论你是个人开发者还是团队成员，掌握 Git 都是一项必备技能。&lt;/p&gt;&#xA;&lt;p&gt;本文将从 Git 的基本概念入手，逐步深入到常用命令、分支管理、远程协作，并提供一些高级技巧和参考资源，帮助你全面掌握 Git。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-git-基础概念&#34;&gt;1. Git 基础概念&lt;/h2&gt;&#xA;&lt;p&gt;在深入学习 Git 命令之前，理解以下核心概念至关重要：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;版本控制系统 (VCS)&lt;/strong&gt;: 记录文件内容变化，以便将来查阅特定版本修订情况的系统。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;分布式版本控制系统 (DVCS)&lt;/strong&gt;: 每个开发者都拥有完整的代码仓库副本，无需依赖中央服务器即可进行大部分操作。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;仓库 (Repository)&lt;/strong&gt;: 存储项目所有文件和历史记录的��方。分为本地仓库和远程仓库。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;工作区 (Working Directory)&lt;/strong&gt;: 你在电脑上实际操作的目录，包含项目文件。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;暂存区 (Staging Area / Index)&lt;/strong&gt;: 一个临时区域，用于存放你即将提交（commit）的更改。你可以选择性地将工作区的修改添加到暂存区。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;提交 (Commit)&lt;/strong&gt;: 将暂存区的更改永久保存到本地仓库的历史记录中。每次提交都会生成一个唯一的 SHA-1 值作为标识。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;分支 (Branch)&lt;/strong&gt;: Git 中最强大的功能之一。它允许你在不影响主线开发的情况下，独立地进行新功能开发或 bug 修复。每个分支都是一个独立的开发线。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;HEAD&lt;/strong&gt;: 指向当前所在分支的指针。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2-git-安装与配置&#34;&gt;2. Git 安装与配置&lt;/h2&gt;&#xA;&lt;h3 id=&#34;21-安装-git&#34;&gt;2.1 安装 Git&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;code&gt;brew install git&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Linux (Debian/Ubuntu)&lt;/strong&gt;: &lt;code&gt;sudo apt-get install git&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: 从 &lt;a href=&#34;https://git-scm.com/download/win&#34;&gt;Git 官方网站&lt;/a&gt; 下载安装包。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;安装完成后，在终端输入 &lt;code&gt;git --version&lt;/code&gt; 验证是否成功。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
