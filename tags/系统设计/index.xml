<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>系统设计 on jaxiu He</title>
    <link>https://axfinn.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/</link>
    <description>Recent content in 系统设计 on jaxiu He</description>
    <generator>Hugo</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Sat, 19 Jul 2025 10:00:00 +0800</lastBuildDate>
    <atom:link href="https://axfinn.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>深入剖析：一个轻量级酒店管理系统</title>
      <link>https://axfinn.github.io/blog/2025-07/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%E4%B8%80%E4%B8%AA%E8%BD%BB%E9%87%8F%E7%BA%A7%E9%85%92%E5%BA%97%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sat, 19 Jul 2025 10:00:00 +0800</pubDate>
      <guid>https://axfinn.github.io/blog/2025-07/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%E4%B8%80%E4%B8%AA%E8%BD%BB%E9%87%8F%E7%BA%A7%E9%85%92%E5%BA%97%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;今天，我将深入分析一个名为 &lt;code&gt;hotel&lt;/code&gt; 的轻量级酒店管理系统。这个项目虽然代码量不大，但功能齐全，涵盖了房间、租客、交易和统计等核心模块。它采用 Python 的 Flask 框架构建，并使用 SQLite 作为数据库，非常适合用于学习和二次开发。此外，项目还贴心地提供了 Dockerfile 和部署脚本，让我们能轻松地将其容器化并一键部署。&lt;/p&gt;&#xA;&lt;h2 id=&#34;技术栈&#34;&gt;技术栈&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;后端框架&lt;/strong&gt;: &lt;a href=&#34;https://flask.palletsprojects.com/&#34;&gt;Flask&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;数据库&lt;/strong&gt;: &lt;a href=&#34;https://www.sqlite.org/index.html&#34;&gt;SQLite&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;图像处理&lt;/strong&gt;: &lt;a href=&#34;https://python-pillow.org/&#34;&gt;Pillow&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;容器化&lt;/strong&gt;: &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;核心功能&#34;&gt;核心功能&lt;/h2&gt;&#xA;&lt;p&gt;该系统的主要功能模块划分清晰，逻辑一目了然。&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-房间管理&#34;&gt;1. 房间管理&lt;/h3&gt;&#xA;&lt;p&gt;系统允许管理员添加、编辑和查看所有房间的信息。每个房间都包含丰富的属性，例如：&lt;/p&gt;</description>
    </item>
    <item>
      <title>构建智能运维大脑：一个可动态发现任务的AI智能体实践</title>
      <link>https://axfinn.github.io/blog/2025-07/%E6%9E%84%E5%BB%BA%E6%99%BA%E8%83%BD%E8%BF%90%E7%BB%B4%E5%A4%A7%E8%84%91%E4%B8%80%E4%B8%AA%E5%8F%AF%E5%8A%A8%E6%80%81%E5%8F%91%E7%8E%B0%E4%BB%BB%E5%8A%A1%E7%9A%84ai%E6%99%BA%E8%83%BD%E4%BD%93%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Fri, 18 Jul 2025 18:30:00 +0800</pubDate>
      <guid>https://axfinn.github.io/blog/2025-07/%E6%9E%84%E5%BB%BA%E6%99%BA%E8%83%BD%E8%BF%90%E7%BB%B4%E5%A4%A7%E8%84%91%E4%B8%80%E4%B8%AA%E5%8F%AF%E5%8A%A8%E6%80%81%E5%8F%91%E7%8E%B0%E4%BB%BB%E5%8A%A1%E7%9A%84ai%E6%99%BA%E8%83%BD%E4%BD%93%E5%AE%9E%E8%B7%B5/</guid>
      <description>&lt;h2 id=&#34;挑战复杂运维场景下的全链路分析困境&#34;&gt;挑战：复杂运维场景下的“全链路分析”困境&lt;/h2&gt;&#xA;&lt;p&gt;在大型互联网服务的日常运维中，我们经常面临这样的场景：用户反馈某个服务出现异常，例如“&lt;code&gt;live.live.app-blink&lt;/code&gt; 服务报错，需要查看错误日志并进行全链路分析”。&lt;/p&gt;&#xA;&lt;p&gt;这看似简单的需求，背后却隐藏着一个复杂且耗时的工作流：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;日志初筛&lt;/strong&gt;：首先，需要从海量日志中精准定位到指定服务的错误日志。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;信息提取&lt;/strong&gt;：从日志中抽取出关键标识，例如 &lt;code&gt;trace_id&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;关联发现&lt;/strong&gt;：基于 &lt;code&gt;trace_id&lt;/code&gt;，需要进一步查询所有相关的上游和下游服务。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;任务分解&lt;/strong&gt;：为每个关联服务生成新的日志查询或指标分析任务。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;并行执行&lt;/strong&gt;：同时执行这些分散的任务。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;结果聚合&lt;/strong&gt;：将所有任务的结果汇总，形成一份完整的全链路分析报告。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;这个过程不仅需要人工介入大量查询和判断，而且效率低下，容易出错。为了解决这一痛点，我们构思并实现了一个&lt;strong&gt;链式处理AI智能体&lt;/strong&gt;，旨在将这一复杂流程自动化、智能化。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
