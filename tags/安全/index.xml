<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>安全 on jaxiu He</title>
    <link>https://blog.jaxiu.cn/tags/%E5%AE%89%E5%85%A8/</link>
    <description>Recent content in 安全 on jaxiu He</description>
    <generator>Hugo</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Thu, 31 Jul 2025 21:00:00 +0800</lastBuildDate>
    <atom:link href="https://blog.jaxiu.cn/tags/%E5%AE%89%E5%85%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DeepChat 安全与隐私保护机制</title>
      <link>https://blog.jaxiu.cn/blog/2025-07/deepchat-security-privacy/</link>
      <pubDate>Thu, 31 Jul 2025 21:00:00 +0800</pubDate>
      <guid>https://blog.jaxiu.cn/blog/2025-07/deepchat-security-privacy/</guid>
      <description>&lt;h1 id=&#34;deepchat-安全与隐私保护机制&#34;&gt;DeepChat 安全与隐私保护机制&lt;/h1&gt;&#xA;&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;&#xA;&lt;p&gt;在当今数字化时代，用户对个人数据的安全和隐私保护越来越关注。作为一个 AI 聊天平台，DeepChat 处理着大量敏感的用户对话数据，因此必须建立完善的安全和隐私保护机制。本文将深入分析 DeepChat 在数据安全、隐私保护和访问控制等方面的实现。&lt;/p&gt;&#xA;&lt;h2 id=&#34;安全架构设计&#34;&gt;安全架构设计&lt;/h2&gt;&#xA;&lt;h3 id=&#34;整体安全架构&#34;&gt;整体安全架构&lt;/h3&gt;&#xA;&lt;p&gt;DeepChat 采用了分层的安全架构设计：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;┌─────────────────────────────────────────────────────────────────────┐&#xA;│                        DeepChat 安全架构                            │&#xA;├─────────────────────────────────────────────────────────────────────┤&#xA;│  ┌─────────────────────────────────────────────────────────────────┐│&#xA;│  │                    应用层安全                                   ││&#xA;│  │  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────────┐ ││&#xA;│  │  │ 用户认证     │  │ 权限控制     │  │ 数据加密与隐私保护       │ ││&#xA;│  │  └─────────────┘  └─────────────┘  └─────────────────────────┘ ││&#xA;│  └─────────────────────────────────────────────────────────────────┘│&#xA;│                              │                                      │&#xA;│  ┌─────────────────────────────────────────────────────────────────┐│&#xA;│  │                    传输层安全                                   ││&#xA;│  │  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────────┐ ││&#xA;│  │  │ HTTPS/TLS   │  │ 网络代理     │  │ API 密钥安全管理         │ ││&#xA;│  │  └─────────────┘  └─────────────┘  └─────────────────────────┘ ││&#xA;│  └─────────────────────────────────────────────────────────────────┘│&#xA;│                              │                                      │&#xA;│  ┌─────────────────────────────────────────────────────────────────┐│&#xA;│  │                    存储层安全                                   ││&#xA;│  │  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────────┐ ││&#xA;│  │  │ 本地存储加密 │  │ 配置文件保护 │  │ 会话数据访问控制         │ ││&#xA;│  │  └─────────────┘  └─────────────┘  └─────────────────────────┘ ││&#xA;│  └─────────────────────────────────────────────────────────────────┘│&#xA;└─────────────────────────────────────────────────────────────────────┘&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;数据加密机制&#34;&gt;数据加密机制&lt;/h2&gt;&#xA;&lt;h3 id=&#34;本地数据存储加密&#34;&gt;本地数据存储加密&lt;/h3&gt;&#xA;&lt;p&gt;DeepChat 对本地存储的敏感数据进行加密处理：&lt;/p&gt;</description>
    </item>
    <item>
      <title>NPS 代理实现：通用基础与流量控制</title>
      <link>https://blog.jaxiu.cn/blog/2025-07/nps-%E4%BB%A3%E7%90%86%E5%AE%9E%E7%8E%B0%E9%80%9A%E7%94%A8%E5%9F%BA%E7%A1%80%E4%B8%8E%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6/</link>
      <pubDate>Fri, 18 Jul 2025 15:45:00 +0800</pubDate>
      <guid>https://blog.jaxiu.cn/blog/2025-07/nps-%E4%BB%A3%E7%90%86%E5%AE%9E%E7%8E%B0%E9%80%9A%E7%94%A8%E5%9F%BA%E7%A1%80%E4%B8%8E%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6/</guid>
      <description>&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;&#xA;&lt;p&gt;在 NPS 服务端核心解析中，我们了解了 &lt;code&gt;server.go&lt;/code&gt; 如何作为服务端的“大脑”，协调各项任务。本篇文章将深入 NPS 的代理实现细节，从 &lt;code&gt;nps/server/proxy/base.go&lt;/code&gt; 文件入手，剖析所有代理服务共用的基础结构、接口定义以及流量控制、安全检查等通用逻辑。理解这些通用组件，有助于我们更好地把握 NPS 多样化代理模式的实现原理。&lt;/p&gt;&#xA;&lt;h2 id=&#34;basego代理服务的基石&#34;&gt;&lt;code&gt;base.go&lt;/code&gt;：代理服务的基石&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;base.go&lt;/code&gt; 文件定义了 NPS 中所有代理服务的基础抽象和通用功能。它确保了不同代理模式（如 TCP、UDP、SOCKS5、HTTP 等）能够遵循统一的接口规范，并共享一些核心的辅助功能。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
