<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Qwen Code on jaxiu He</title>
    <link>https://axfinn.github.io/tags/qwen-code/</link>
    <description>Recent content in Qwen Code on jaxiu He</description>
    <generator>Hugo</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Wed, 23 Jul 2025 16:10:00 +0800</lastBuildDate>
    <atom:link href="https://axfinn.github.io/tags/qwen-code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Qwen Code 实战应用与总结</title>
      <link>https://axfinn.github.io/blog/2025-07/qwen-code-practical-applications-and-summary/</link>
      <pubDate>Wed, 23 Jul 2025 16:10:00 +0800</pubDate>
      <guid>https://axfinn.github.io/blog/2025-07/qwen-code-practical-applications-and-summary/</guid>
      <description>&lt;h1 id=&#34;qwen-code-实战应用与总结&#34;&gt;Qwen Code 实战应用与总结&lt;/h1&gt;&#xA;&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;&#xA;&lt;p&gt;经过前面七篇文章的详细介绍，我们已经全面了解了 Qwen Code 项目的各个方面，从基本概念到核心实现细节。在本文中，我们将通过实际应用案例来展示 Qwen Code 的强大功能，并对整个系列进行总结。&lt;/p&gt;&#xA;&lt;h2 id=&#34;实战应用案例&#34;&gt;实战应用案例&lt;/h2&gt;&#xA;&lt;h3 id=&#34;案例一快速理解开源项目&#34;&gt;案例一：快速理解开源项目&lt;/h3&gt;&#xA;&lt;p&gt;假设我们需要快速理解一个复杂的开源项目，比如 Redux。我们可以使用 Qwen Code 来帮助我们：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 启动 Qwen Code&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;qwen-code&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 然后输入以下指令：&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# &amp;#34;请帮我分析 Redux 项目的结构，特别是它的核心概念和实现原理&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Qwen Code 会执行以下操作：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;使用 &lt;code&gt;list_directory&lt;/code&gt; 工具查看项目结构&lt;/li&gt;&#xA;&lt;li&gt;使用 &lt;code&gt;read_file&lt;/code&gt; 工具读取关键文件（如 README.md、核心源文件）&lt;/li&gt;&#xA;&lt;li&gt;使用 &lt;code&gt;search_file_content&lt;/code&gt; 工具搜索特定概念的实现&lt;/li&gt;&#xA;&lt;li&gt;综合分析后给出详细的解释&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;案例二自动化代码审查&#34;&gt;案例二：自动化代码审查&lt;/h3&gt;&#xA;&lt;p&gt;我们可以使用 Qwen Code 来自动化代码审查流程：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Qwen Code 开发指南</title>
      <link>https://axfinn.github.io/blog/2025-07/qwen-code-development-guide/</link>
      <pubDate>Wed, 23 Jul 2025 16:05:00 +0800</pubDate>
      <guid>https://axfinn.github.io/blog/2025-07/qwen-code-development-guide/</guid>
      <description>&lt;h1 id=&#34;qwen-code-开发指南&#34;&gt;Qwen Code 开发指南&lt;/h1&gt;&#xA;&lt;h2 id=&#34;开发环境设置&#34;&gt;开发环境设置&lt;/h2&gt;&#xA;&lt;h3 id=&#34;系统要求&#34;&gt;系统要求&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Node.js 20+&lt;/strong&gt;：项目需要 Node.js 20 或更高版本&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;npm 8+&lt;/strong&gt;：推荐使用 npm 8 或更高版本&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Git&lt;/strong&gt;：用于版本控制&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;克隆项目&#34;&gt;克隆项目&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone git@github.com:axfinn/qwen-code.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; qwen-code&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;安装依赖&#34;&gt;安装依赖&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm install&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这将安装所有必要的依赖项，包括开发依赖。&lt;/p&gt;&#xA;&lt;h2 id=&#34;项目结构回顾&#34;&gt;项目结构回顾&lt;/h2&gt;&#xA;&lt;p&gt;Qwen Code 采用 monorepo 结构，使用 npm workspaces 管理多个包：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;qwen-code/&#xA;├── packages/&#xA;│   ├── cli/          # CLI 工具&#xA;│   ├── core/         # 核心功能&#xA;│   └── ...           # 其他包&#xA;├── docs/             # 文档&#xA;├── examples/         # 示例&#xA;├── tests/            # 测试&#xA;└── ...&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;开发工作流&#34;&gt;开发工作流&lt;/h2&gt;&#xA;&lt;h3 id=&#34;构建项目&#34;&gt;构建项目&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 构建所有包&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm run build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 构建特定包&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm run build --workspace&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;@qwen-code/cli&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;运行测试&#34;&gt;运行测试&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 运行所有测试&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 运行单元测试&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm run test:unit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 运行集成测试&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm run test:integration&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;代码检查&#34;&gt;代码检查&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 运行 ESLint&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm run lint&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 运行 TypeScript 类型检查&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm run typecheck&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 格式化代码&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm run format&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;完整预检&#34;&gt;完整预检&lt;/h3&gt;&#xA;&lt;p&gt;在提交代码前，运行完整的预检流程：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Qwen Code 核心代码实现细节深度解读</title>
      <link>https://axfinn.github.io/blog/2025-07/qwen-code-core-implementation-details/</link>
      <pubDate>Wed, 23 Jul 2025 16:00:00 +0800</pubDate>
      <guid>https://axfinn.github.io/blog/2025-07/qwen-code-core-implementation-details/</guid>
      <description>&lt;h1 id=&#34;qwen-code-核心代码实现细节深度解读&#34;&gt;Qwen Code 核心代码实现细节深度解读&lt;/h1&gt;&#xA;&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;&#xA;&lt;p&gt;在前几篇文章中，我们已经对 Qwen Code 的整体架构和实现框架进行了详细分析。现在，我们将深入到代码层面，解读 Qwen Code 的核心实现细节。通过分析关键代码片段，我们可以更好地理解 Qwen Code 的工作原理和设计思想。&lt;/p&gt;&#xA;&lt;h2 id=&#34;cli-入口点分析&#34;&gt;CLI 入口点分析&lt;/h2&gt;&#xA;&lt;h3 id=&#34;主程序启动&#34;&gt;主程序启动&lt;/h3&gt;&#xA;&lt;p&gt;CLI 的入口点位于 &lt;code&gt;packages/cli/index.ts&lt;/code&gt;：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-typescript&#34; data-lang=&#34;typescript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/usr/bin/env node&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./src/gemini.js&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./src/gemini.js&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// --- Global Entry Point ---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;An unexpected critical error occurred:&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这段代码做了几件重要的事情：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;导入主模块 &lt;code&gt;gemini.js&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;调用 &lt;code&gt;main()&lt;/code&gt; 函数启动应用&lt;/li&gt;&#xA;&lt;li&gt;实现全局错误处理，确保任何未捕获的异常都能被妥善处理&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;CLI 启动流程可以用下图表示：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Qwen Code 实现框架深度解析</title>
      <link>https://axfinn.github.io/blog/2025-07/qwen-code-implementation-framework/</link>
      <pubDate>Wed, 23 Jul 2025 15:55:00 +0800</pubDate>
      <guid>https://axfinn.github.io/blog/2025-07/qwen-code-implementation-framework/</guid>
      <description>&lt;h1 id=&#34;qwen-code-实现框架深度解析&#34;&gt;Qwen Code 实现框架深度解析&lt;/h1&gt;&#xA;&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;&#xA;&lt;p&gt;Qwen Code 是一个基于 AI 的命令行工具，它将大型语言模型的能力与本地开发环境相结合。为了实现这一目标，Qwen Code 采用了复杂而精巧的实现框架，涉及多个技术领域。本文将深入解析 Qwen Code 的实现框架，帮助读者理解其内部工作机制。&lt;/p&gt;&#xA;&lt;h2 id=&#34;整体架构&#34;&gt;整体架构&lt;/h2&gt;&#xA;&lt;p&gt;Qwen Code 的整体架构可以分为以下几个主要层次：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;用户接口层&lt;/strong&gt;：提供命令行交互界面&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;核心逻辑层&lt;/strong&gt;：处理用户请求和 AI 模型交互&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;工具执行层&lt;/strong&gt;：执行各种本地操作工具&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;模型接口层&lt;/strong&gt;：与 Qwen 模型进行通信&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;安全管理层&lt;/strong&gt;：确保操作的安全性&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;┌─────────────────────────────────────┐&#xA;│           用户接口层                 │&#xA;│         (CLI 界面)                  │&#xA;├─────────────────────────────────────┤&#xA;│           核心逻辑层                 │&#xA;│    (请求处理、响应生成)              │&#xA;├─────────────────────────────────────┤&#xA;│          工具执行层                  │&#xA;│  (文件系统、网络、命令执行等工具)     │&#xA;├─────────────────────────────────────┤&#xA;│          模型接口层                  │&#xA;│      (与 Qwen 模型通信)              │&#xA;├─────────────────────────────────────┤&#xA;│          安全管理层                  │&#xA;│    (权限控制、沙箱隔离等)            │&#xA;└─────────────────────────────────────┘&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;为了更直观地理解整体架构，我们可以用 Mermaid 绘制一个架构图：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Qwen Code 项目框架详解</title>
      <link>https://axfinn.github.io/blog/2025-07/qwen-code-project-structure/</link>
      <pubDate>Wed, 23 Jul 2025 15:50:00 +0800</pubDate>
      <guid>https://axfinn.github.io/blog/2025-07/qwen-code-project-structure/</guid>
      <description>&lt;h1 id=&#34;qwen-code-项目框架详解&#34;&gt;Qwen Code 项目框架详解&lt;/h1&gt;&#xA;&lt;h2 id=&#34;项目概述&#34;&gt;项目概述&lt;/h2&gt;&#xA;&lt;p&gt;Qwen Code 采用现代化的软件工程实践，使用 TypeScript 编写，基于 monorepo 结构管理多个包。项目结构清晰，便于维护和扩展。&lt;/p&gt;&#xA;&lt;h2 id=&#34;项目结构&#34;&gt;项目结构&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;qwen-code/&#xA;├── .github/                  # GitHub 相关配置&#xA;│   └── workflows/            # CI/CD 工作流&#xA;├── docs/                     # 项目文档&#xA;│   ├── tools/                # 工具文档&#xA;│   └── ...                   # 其他文档&#xA;├── examples/                 # 使用示例&#xA;├── integration-tests/        # 集成测试&#xA;├── packages/                 # 核心包&#xA;│   ├── cli/                  # CLI 工具&#xA;│   ├── core/                 # 核心功能&#xA;│   └── ...                   # 其他包&#xA;├── scripts/                  # 构建和辅助脚本&#xA;├── tests/                    # 单元测试&#xA;├── .eslintrc.js              # ESLint 配置&#xA;├── .gitignore                # Git 忽略文件&#xA;├── .npmrc                    # npm 配置&#xA;├── Dockerfile                # Docker 配置&#xA;├── Makefile                  # Makefile 脚本&#xA;├── README.md                 # 项目说明&#xA;├── package.json              # 项目配置&#xA;└── tsconfig.json             # TypeScript 配置&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;为了更直观地理解项目结构，我们可以用 Mermaid 绘制一个图表：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Qwen Code CLI 使用详解</title>
      <link>https://axfinn.github.io/blog/2025-07/qwen-code-cli-usage/</link>
      <pubDate>Wed, 23 Jul 2025 15:45:00 +0800</pubDate>
      <guid>https://axfinn.github.io/blog/2025-07/qwen-code-cli-usage/</guid>
      <description>&lt;h1 id=&#34;qwen-code-cli-使用详解&#34;&gt;Qwen Code CLI 使用详解&lt;/h1&gt;&#xA;&lt;h2 id=&#34;cli-入门&#34;&gt;CLI 入门&lt;/h2&gt;&#xA;&lt;p&gt;Qwen Code 是一个功能强大的命令行 AI 工作流工具，为开发者提供了一种全新的与代码交互的方式。通过 CLI，用户可以与 AI 进行对话，执行各种编程任务。&lt;/p&gt;&#xA;&lt;h3 id=&#34;安装&#34;&gt;安装&lt;/h3&gt;&#xA;&lt;p&gt;确保您已经安装了 Node.js 20+ 版本，然后通过 npm 安装 Qwen Code：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm install -g @qwen-code/qwen-code&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;基本使用&#34;&gt;基本使用&lt;/h3&gt;&#xA;&lt;p&gt;安装完成后，您可以通过以下命令启动 Qwen Code：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;qwen-code&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这将启动交互式 CLI 会话，您可以直接与 AI 进行对话。&lt;/p&gt;&#xA;&lt;h3 id=&#34;非交互式使用&#34;&gt;非交互式使用&lt;/h3&gt;&#xA;&lt;p&gt;您也可以通过管道或重定向将输入传递给 Qwen Code：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;帮我生成一个 React 组件&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; qwen-code&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;cli-入口实现&#34;&gt;CLI 入口实现&lt;/h2&gt;&#xA;&lt;p&gt;Qwen Code 的 CLI 入口是一个基于 React 和 Ink 构建的命令行应用程序。主要特性包括：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Qwen Code 工具详解</title>
      <link>https://axfinn.github.io/blog/2025-07/qwen-code-tools-detailed/</link>
      <pubDate>Wed, 23 Jul 2025 15:30:00 +0800</pubDate>
      <guid>https://axfinn.github.io/blog/2025-07/qwen-code-tools-detailed/</guid>
      <description>&lt;h1 id=&#34;qwen-code-工具详解&#34;&gt;Qwen Code 工具详解&lt;/h1&gt;&#xA;&lt;h2 id=&#34;工具概览&#34;&gt;工具概览&lt;/h2&gt;&#xA;&lt;p&gt;Qwen Code 提供了一套丰富的工具集，允许 AI 模型与本地环境进行交互、执行命令、访问文件和执行各种操作。这些工具通过确认提示和沙箱机制确保安全性。&lt;/p&gt;&#xA;&lt;p&gt;工具集的分类可以用下图表示：&lt;/p&gt;&#xA;&lt;div class=&#34;mermaid&#34;&gt;&#xA;&#xA;graph TD&#xA;    A[Qwen Code 工具集] --&gt; B[文件系统工具]&#xA;    A --&gt; C[网络工具]&#xA;    A --&gt; D[其他工具]&#xA;    &#xA;    B --&gt; B1[list_directory]&#xA;    B --&gt; B2[read_file]&#xA;    B --&gt; B3[write_file]&#xA;    B --&gt; B4[glob]&#xA;    B --&gt; B5[search_file_content]&#xA;    B --&gt; B6[replace]&#xA;    &#xA;    C --&gt; C1[google_web_search]&#xA;    C --&gt; C2[web_fetch]&#xA;    &#xA;    D --&gt; D1[save_memory]&#xA;    D --&gt; D2[run_shell_command]&#xA;    D --&gt; D3[MCP 服务器工具]&#xA;&#xA;&lt;/div&gt;&#xA;&lt;h2 id=&#34;文件系统工具&#34;&gt;文件系统工具&lt;/h2&gt;&#xA;&lt;p&gt;Qwen Code 提供了完整的文件系统操作工具：&lt;/p&gt;&#xA;&lt;h3 id=&#34;list_directory列出目录内容&#34;&gt;&lt;code&gt;list_directory&lt;/code&gt;：列出目录内容&lt;/h3&gt;&#xA;&lt;p&gt;参数：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;path&lt;/code&gt; (string, required): 要列出的目录的绝对路径&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ignore&lt;/code&gt; (array, optional): 要忽略的 glob 模式列表&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;respect_git_ignore&lt;/code&gt; (boolean, optional): 是否遵循 .gitignore 模式，默认为 true&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;功能：显示指定目录下的文件和子目录&lt;/p&gt;</description>
    </item>
    <item>
      <title>Qwen Code 项目概览</title>
      <link>https://axfinn.github.io/blog/2025-07/qwen-code-project-overview/</link>
      <pubDate>Wed, 23 Jul 2025 15:00:00 +0800</pubDate>
      <guid>https://axfinn.github.io/blog/2025-07/qwen-code-project-overview/</guid>
      <description>&lt;h1 id=&#34;qwen-code-项目概览&#34;&gt;Qwen Code 项目概览&lt;/h1&gt;&#xA;&lt;h2 id=&#34;什么是-qwen-code&#34;&gt;什么是 Qwen Code？&lt;/h2&gt;&#xA;&lt;p&gt;Qwen Code 是一个基于 Gemini CLI 改造的命令行 AI 工作流工具，专为 Qwen3-Coder 模型优化，具有增强的解析器和工具支持。该项目的主要目标是为开发者提供一个强大的命令行界面，让他们能够利用 AI 的能力来完成各种编程任务。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;┌─────────────────────────────────────┐&#xA;│           Qwen Code 架构            │&#xA;├─────────────────────────────────────┤&#xA;│  ┌─────────────┐  ┌──────────────┐ │&#xA;│  │   CLI 界面   │  │  核心引擎     │ │&#xA;│  └─────────────┘  └──────────────┘ │&#xA;│        │               │           │&#xA;│        ▼               ▼           │&#xA;│  ┌─────────────┐  ┌──────────────┐ │&#xA;│  │  用户输入    │  │  AI 模型接口  │ │&#xA;│  └─────────────┘  └──────────────┘ │&#xA;│        │               │           │&#xA;│        ▼               ▼           │&#xA;│  ┌───────────────────────────────┐ │&#xA;│  │        工具执行层              │ │&#xA;│  │  - 文件系统操作                │ │&#xA;│  │  - 网络请求                   │ │&#xA;│  │  - 命令执行                   │ │&#xA;│  │  - 内存管理                   │ │&#xA;│  └───────────────────────────────┘ │&#xA;└─────────────────────────────────────┘&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;核心特性&#34;&gt;核心特性&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;超越上下文限制的代码理解和编辑&lt;/strong&gt;：Qwen Code 可以处理大型代码库，不受传统模型上下文长度的限制。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;工作流自动化&lt;/strong&gt;：支持复杂的开发任务自动化，提高开发效率。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;增强的解析器&lt;/strong&gt;：改进了对代码结构的理解能力，能够更准确地解析和处理代码。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;丰富的工具集&lt;/strong&gt;：提供多种工具，包括文件系统访问、网络搜索、多文件处理等。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;安装要求&#34;&gt;安装要求&lt;/h3&gt;&#xA;&lt;p&gt;Qwen Code 需要 Node.js 20+ 版本。可以通过 npm 或从源代码安装：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
