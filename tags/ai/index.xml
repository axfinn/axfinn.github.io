<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AI on jaxiu He</title>
    <link>https://axfinn.github.io/tags/ai/</link>
    <description>Recent content in AI on jaxiu He</description>
    <generator>Hugo</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Wed, 23 Jul 2025 15:00:00 +0800</lastBuildDate>
    <atom:link href="https://axfinn.github.io/tags/ai/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Qwen Code 项目概览</title>
      <link>https://axfinn.github.io/blog/2025-07/qwen-code-project-overview/</link>
      <pubDate>Wed, 23 Jul 2025 15:00:00 +0800</pubDate>
      <guid>https://axfinn.github.io/blog/2025-07/qwen-code-project-overview/</guid>
      <description>&lt;h1 id=&#34;qwen-code-项目概览&#34;&gt;Qwen Code 项目概览&lt;/h1&gt;&#xA;&lt;h2 id=&#34;什么是-qwen-code&#34;&gt;什么是 Qwen Code？&lt;/h2&gt;&#xA;&lt;p&gt;Qwen Code 是一个基于 Gemini CLI 改造的命令行 AI 工作流工具，专为 Qwen3-Coder 模型优化，具有增强的解析器和工具支持。该项目的主要目标是为开发者提供一个强大的命令行界面，让他们能够利用 AI 的能力来完成各种编程任务。&lt;/p&gt;&#xA;&lt;h3 id=&#34;核心特性&#34;&gt;核心特性&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;超越上下文限制的代码理解和编辑&lt;/strong&gt;：Qwen Code 可以处理大型代码库，不受传统模型上下文长度的限制。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;工作流自动化&lt;/strong&gt;：支持复杂的开发任务自动化，提高开发效率。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;增强的解析器&lt;/strong&gt;：改进了对代码结构的理解能力，能够更准确地解析和处理代码。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;丰富的工具集&lt;/strong&gt;：提供多种工具，包括文件系统访问、网络搜索、多文件处理等。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;安装要求&#34;&gt;安装要求&lt;/h3&gt;&#xA;&lt;p&gt;Qwen Code 需要 Node.js 20+ 版本。可以通过 npm 或从源代码安装：&lt;/p&gt;</description>
    </item>
    <item>
      <title>大模型智能体构建：从理论到实践</title>
      <link>https://axfinn.github.io/blog/2025-07/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%99%BA%E8%83%BD%E4%BD%93%E6%9E%84%E5%BB%BA%E4%BB%8E%E7%90%86%E8%AE%BA%E5%88%B0%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Fri, 18 Jul 2025 18:30:00 +0800</pubDate>
      <guid>https://axfinn.github.io/blog/2025-07/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%99%BA%E8%83%BD%E4%BD%93%E6%9E%84%E5%BB%BA%E4%BB%8E%E7%90%86%E8%AE%BA%E5%88%B0%E5%AE%9E%E8%B7%B5/</guid>
      <description>&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;&#xA;&lt;p&gt;随着大型语言模型（LLM）的飞速发展，构建能够自主感知、决策和行动的智能体（Agent）成为了人工智能领域的热点。大模型智能体不仅能够理解复杂的指令，还能通过与环境的交互，完成一系列任务。本文将深入探讨大模型智能体的构建原理、核心组件以及实践中的挑战与机遇。&lt;/p&gt;&#xA;&lt;h2 id=&#34;大模型智能体的核心组件&#34;&gt;大模型智能体的核心组件&lt;/h2&gt;&#xA;&lt;p&gt;一个典型的大模型智能体通常包含以下几个核心组件：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;感知模块（Perception Module）&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：负责从环境中获取信息，并将其转化为LLM可以理解的格式。这是智能体与外部世界交互的第一步。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;输入模态&lt;/strong&gt;：可以处理多种模态的数据，包括但不限于：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;文本&lt;/strong&gt;：网页内容、文档、聊天记录、数据库查询结果等。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;图像/视频&lt;/strong&gt;：通过图像识别、OCR（光学字符识别）、视频分析模型提取视觉信息。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;音频&lt;/strong&gt;：通过语音识别（ASR）将语音转化为文本。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;结构化数据&lt;/strong&gt;：如JSON、XML、CSV等，需要解析并转化为自然语言描述或LLM可理解的格式。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;关键技术&lt;/strong&gt;：数据预处理、特征提取、多模态信息融合、特定领域的解析器。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;规划模块（Planning Module）&lt;/strong&gt;：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
