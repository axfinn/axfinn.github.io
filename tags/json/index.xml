<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSON on jaxiu He</title>
    <link>https://axfinn.github.io/tags/json/</link>
    <description>Recent content in JSON on jaxiu He</description>
    <generator>Hugo</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Fri, 18 Jul 2025 19:10:00 +0800</lastBuildDate>
    <atom:link href="https://axfinn.github.io/tags/json/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>NPS 核心探秘：配置加载与数据持久化</title>
      <link>https://axfinn.github.io/blog/2025-07/nps-%E6%A0%B8%E5%BF%83%E6%8E%A2%E7%A7%98%E9%85%8D%E7%BD%AE%E5%8A%A0%E8%BD%BD%E4%B8%8E%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/</link>
      <pubDate>Fri, 18 Jul 2025 19:10:00 +0800</pubDate>
      <guid>https://axfinn.github.io/blog/2025-07/nps-%E6%A0%B8%E5%BF%83%E6%8E%A2%E7%A7%98%E9%85%8D%E7%BD%AE%E5%8A%A0%E8%BD%BD%E4%B8%8E%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/</guid>
      <description>&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;&#xA;&lt;p&gt;一个稳定可靠的服务，离不开健全的配置管理和数据持久化机制。NPS 作为一个需要长期运行的内网穿透服务器，必须能够加载启动配置、在运行时动态修改配置，并在服务重启后恢复所有任务和客户端信息。这一切都由 &lt;code&gt;nps/file&lt;/code&gt; 目录下的代码实现。本篇文章将深入这一模块，剖析 NPS 是如何通过简单的 JSON 文件，构建出一个轻量级且高效的“数据库”，并实现对客户端、隧道、主机等所有配置的增删改查和持久化存储。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;filegonps-的数据中枢&#34;&gt;&lt;code&gt;file.go&lt;/code&gt;：NPS 的数据中枢&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;nps/file&lt;/code&gt; 目录的核心是 &lt;code&gt;file.go&lt;/code&gt; 文件，它定义了 NPS 的数据模型和所有数据操作的接口。NPS 并未采用传统的关系型数据库或 NoSQL 数据库，而是选择使用 JSON 文件作为其数据存储后端，这使得 NPS 非常轻量、易于部署和迁移。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
